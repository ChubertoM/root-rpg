/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

$sizes: 0, 1, 2, 3;

@each $size in $sizes {
  .margin-#{$size} {
    margin: #{$size}rem;
  }

  .margin-top-#{$size} {
    margin-top: #{$size}rem;
  }

  .margin-bottom-#{$size} {
    margin-bottom: #{$size}rem;
  }

  .margin-left-#{$size} {
    margin-left: #{$size}rem;
  }

  .margin-right-#{$size} {
    margin-right: #{$size}rem;
  }

  .padding-#{$size} {
    padding: #{$size}rem;
  }

  .padding-top-#{$size} {
    padding-top: #{$size}rem;
  }

  .padding-bottom-#{$size} {
    padding-bottom: #{$size}rem;
  }

  .padding-left-#{$size} {
    padding-left: #{$size}rem;
  }

  .padding-right-#{$size} {
    padding-right: #{$size}rem;
  }
}

.hidden {
  display: none !important;
}

.true-center {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}

.blank-slate {
  font-size: 2rem;
  opacity: 0.5;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;

  padding: 20%;
}

.has-suffix {
  align-items: center;
}

.action-row {
  width: 100%;
}

.validation-errors, .validation-warnings, .validation-success {
  min-height: 30px;
  padding-top: 5px;

  .message {
    display: flex;
    align-items: center;

    opacity: 0.7;

    ion-icon {
      margin-right: 5px;
    }
  }
}

.validation-errors .message {
  color: var(--ion-color-danger);
}

.validation-warnings .message {
  color: var(--ion-color-warning);
}

.validation-success .message {
  color: var(--ion-color-success);
}

ion-list {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

ion-card-title, ion-card-subtitle {
  text-align: center;
}

.alert-tappable {
  height: auto !important;
  contain: content !important;

  .alert-radio-label {
    white-space: normal !important;
  }
}

.spaced-label {
  margin-bottom: 10px !important;
}

.vertical-center {
  display: flex;
  align-items: center;
}

.select-small-subtext {
  font-size: 80%;
  opacity: 0.7;
  font-style: italic;
}

.big-alert .alert-wrapper {
  min-width: 80%;
}

.card-header-button {
  position: absolute;
  right: 1em;
  top: 1em;
}

.change {
  cursor: pointer;
  position: absolute;
  right: 1em;
  top: 0.8em;
  font-size: 20px;
}

ion-list-header {
  font-weight: bold;
}

.thin-item {
  height: 32px;
  --min-height: 32px;
}

.alert-wrapper {
  --width: 350px;
  --min-width: 350px;
}

.pointer {
  cursor: pointer;
}

.fake-form-label {
  color: var(--color) !important;
  font-size: 75% !important;

  & + h2.form-placeholder {
    color: #000;
    opacity: 0.33;
  }
}

.can-be-preformatted {
  white-space: pre-line;
}

@media screen and (min-width: 720px) {
  .medium-modal {
    --width: 50%;
    --height: 90%;
  }

  .big-modal {
    --width: 90%;
    --height: 90%;
  }
}

svg.woodland-overview {
  .conceptG text {
    pointer-events: none;
  }

  marker {
    fill: #333;
  }

  g.conceptG circle {
    fill: #F6FBFF;
    stroke: #333;
    stroke-width: 2px;
    cursor: pointer;
  }

  g.conceptG:hover circle {
    fill: rgb(200, 238, 241);
  }

  g.selected circle {
    fill: rgb(250, 232, 255);
  }

  g.selected:hover circle {
    fill: rgb(250, 232, 255);
  }

  path.link {
    fill: none;
    stroke: #333;
    stroke-width: 6px;
    cursor: pointer;
  }

  path.link:hover {
    stroke: rgb(94, 196, 204);
  }

  g.connect-node circle {
    fill: #BEFFFF;
  }

  path.link.hidden {
    stroke-width: 0;
  }

  path.link.selected {
    stroke: rgb(229, 172, 247);
  }

  .hidden {
    display: none;
  }

  text {
    user-select: none;
  }

}

ion-modal.transparent {
  background-color:rgba(0, 0, 0, 0) !important;
  --background: transparent !important;

  box-shadow: none !important;
  --box-shadow: none !important;

  .modal-wrapper {
    background-color:rgba(0, 0, 0, 0) !important;
    --background: transparent !important;
  }
}

ion-model:not(.transparent) .modal-wrapper {
  --border-width: 1px;
  --border-style: solid;
  --border-color: #ccc;
}
